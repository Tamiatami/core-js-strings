// Utility Functions

// Check if input is a string
function isString(input) {
    return typeof input === 'string' || input instanceof String;
  }
  
  // Concatenate two strings
  function concatenateStrings(str1, str2) {
    if (isString(str1) && isString(str2)) {
      return str1 + str2;
    }
    return '';
  }
  
  // Get the first character of a string
  function getFirstChar(str) {
    if (isString(str) && str.length > 0) {
      return str[0];
    }
    return '';
  }
  
  // Remove leading and trailing whitespaces
  function removeLeadingAndTrailingWhitespaces(str) {
    if (isString(str)) {
      return str.trim();
    }
    return '';
  }
  
  // Repeat a string n times
  function repeatString(str, times) {
    if (isString(str) && Number.isInteger(times) && times > 0) {
      return str.repeat(times);
    }
    return '';
  }
  
  // Check if a string starts with a given substring
  function startsWith(str, substring) {
    if (isString(str) && isString(substring)) {
      return str.startsWith(substring);
    }
    return false;
  }
  
  // Check if a string ends with a given substring
  function endsWith(str, substring) {
    if (isString(str) && isString(substring)) {
      return str.endsWith(substring);
    }
    return false;
  }
  
  // Format time (HH:MM:SS) from seconds
  function formatTime(seconds) {
    if (Number.isInteger(seconds) && seconds >= 0) {
      const hrs = String(Math.floor(seconds / 3600)).padStart(2, '0');
      const mins = String(Math.floor((seconds % 3600) / 60)).padStart(2, '0');
      const secs = String(seconds % 60).padStart(2, '0');
      return `${hrs}:${mins}:${secs}`;
    }
    return '00:00:00';
  }
  
  // Reverse a string
  function reverseString(str) {
    if (isString(str)) {
      return str.split('').reverse().join('');
    }
    return '';
  }
  
  // Order characters of a string alphabetically
  function orderAlphabetically(str) {
    if (isString(str)) {
      return str.split('').sort().join('');
    }
    return '';
  }
  
  // Check if a string contains a given substring
  function containsSubstring(str, substring) {
    if (isString(str) && isString(substring)) {
      return str.includes(substring);
    }
    return false;
  }
  
  // Count the number of vowels in a string
  function countVowels(str) {
    if (isString(str)) {
      const vowels = str.match(/[aeiouAEIOU]/g);
      return vowels ? vowels.length : 0;
    }
    return 0;
  }
  
  // Check if a string is a palindrome
  function isPalindrome(str) {
    if (isString(str)) {
      const normalized = str.toLowerCase().replace(/[\W_]/g, '');
      return normalized === normalized.split('').reverse().join('');
    }
    return false;
  }
  
  // Check if a string is a palindrome
function isPalindrome(str) {
    if (isString(str)) {
      const normalized = str.toLowerCase().replace(/[\W_]/g, ''); // Normalize string by removing non-alphanumeric characters
      return normalized === normalized.split('').reverse().join(''); // Check if string is equal to its reverse
    }
    return false; // Return false if input is not a string
  }
// Test the isPalindrome function
console.log(isPalindrome("racecar")); // Expected output: true
console.log(isPalindrome("hello"));  // Expected output: false
console.log(isPalindrome("A man, a plan, a canal, Panama")); // Expected output: true
console.log(isPalindrome("Was it a car or a cat I saw?")); // Expected output: true
console.log(isPalindrome("No 'x' in Nixon")); // Expected output: true
  
